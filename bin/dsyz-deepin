#!/usr/bin/env bash

# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: Chen Linxuan <me@black-desk.cn>

# NOTE:
# Use /usr/bin/env to find shell interpreter for better portability.
# Reference: https://en.wikipedia.org/wiki/Shebang_%28Unix%29#Portability

# NOTE:
# Exit immediately if any commands (even in pipeline)
# exits with a non-zero status.
set -e
set -o pipefail

# WARNING:
# This is not reliable when using POSIX sh
# and current script file is sourced by `source` or `.`
CURRENT_SOURCE_FILE_PATH="${BASH_SOURCE[0]:-$0}"
CURRENT_SOURCE_FILE_NAME="$(basename -- "$CURRENT_SOURCE_FILE_PATH")"

# This function log messages to stderr works like printf
# with a prefix of the current script name.
# Arguments:
#   $1 - The format string.
#   $@ - Arguments to the format string, just like printf.
function log() {
	local format="$1"
	shift
	# shellcheck disable=SC2059
	printf "$CURRENT_SOURCE_FILE_NAME: $format\n" "$@" >&2 || true
}

function main() {
	log "[INFO] This is a wrapper script for dsyz to use the Deepin kernel repository."
	log "[INFO] All arguments will be passed to dsyz."

	# NOTE:
	# Copy from kernel source scripts/subarch.include
	SUBARCH="$(shell uname -m | sed -e s/i.86/x86/ -e s/x86_64/x86/ \
		-e s/sun4u/sparc64/ \
		-e s/arm.*/arm/ -e s/sa110/arm/ \
		-e s/s390x/s390/ \
		-e s/ppc.*/powerpc/ -e s/mips.*/mips/ \
		-e s/sh[234].*/sh/ -e s/aarch64.*/arm64/ \
		-e s/riscv.*/riscv/ -e s/loongarch.*/loongarch/)"

	DSYZ_KERNEL_REPO="${DSYZ_KERNEL_REPO:-https://github.com/deepin-community/kernel.git}"
	env \
		DSYZ_KERNEL_REPO="$DSYZ_KERNEL_REPO" \
		DSYZ_KERNEL_CONFIG="deepin_${SUBARCH}_desktop_defconfig" \
		dsyz "$@"
}

main "$@"
